//
//  SearchFestivalInteractor.swift
//  TourDemo_CleanSwift
//
//  Created by N4158 on 2022/02/07.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import RxSwift
import RxCocoa

protocol SearchFestivalBusinessLogic
{
    func doSearch(request: SearchFestival.FetchSearchItems.Request)
    func selectArea()->PublishSubject<AreaSelect.FetchAreaItems.ViewModel.DisplayedAreaItem>
}

protocol SearchFestivalDataStore
{
    var searchItem:FestivalModel? { get }
    var areaCodeSubject:PublishSubject<AreaSelect.FetchAreaItems.ViewModel.DisplayedAreaItem>? { get set }
}

class SearchFestivalInteractor: SearchFestivalBusinessLogic, SearchFestivalDataStore
{
    
    let disposeBag = DisposeBag()
    var presenter: SearchFestivalPresentationLogic?
    var worker: SearchFestivalWorker?
    var searchItem: FestivalModel?
    var areaCodeSubject:PublishSubject<AreaSelect.FetchAreaItems.ViewModel.DisplayedAreaItem>?
    
    // MARK: Do something
    
    func doSearch(request: SearchFestival.FetchSearchItems.Request)
    {
        if worker == nil {
            worker = SearchFestivalWorker()
        }
        worker = SearchFestivalWorker()
        
        worker?.doSearchWork(request: request).subscribe { model in
            self.searchItem = model
            let response = SearchFestival.FetchSearchItems.Response(searchItem: model)
            self.presenter?.presentFetchSearchItems(response: response)
        } onError: { error in
            print(error.localizedDescription)
        }.disposed(by: disposeBag)
    }
    
    func selectArea()->PublishSubject<AreaSelect.FetchAreaItems.ViewModel.DisplayedAreaItem> {
        areaCodeSubject = PublishSubject<AreaSelect.FetchAreaItems.ViewModel.DisplayedAreaItem>()
        return areaCodeSubject!
    }
}
